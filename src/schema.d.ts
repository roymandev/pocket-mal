/* eslint-disable @typescript-eslint/naming-convention */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/anime/{id}/full': {
    get: operations['getAnimeFullById'];
  };
  '/anime/{id}': {
    get: operations['getAnimeById'];
  };
  '/anime/{id}/characters': {
    get: operations['getAnimeCharacters'];
  };
  '/anime/{id}/staff': {
    get: operations['getAnimeStaff'];
  };
  '/anime/{id}/episodes': {
    get: operations['getAnimeEpisodes'];
  };
  '/anime/{id}/episodes/{episode}': {
    get: operations['getAnimeEpisodeById'];
  };
  '/anime/{id}/news': {
    get: operations['getAnimeNews'];
  };
  '/anime/{id}/forum': {
    get: operations['getAnimeForum'];
  };
  '/anime/{id}/videos': {
    get: operations['getAnimeVideos'];
  };
  '/anime/{id}/videos/episodes': {
    get: operations['getAnimeVideosEpisodes'];
  };
  '/anime/{id}/pictures': {
    get: operations['getAnimePictures'];
  };
  '/anime/{id}/statistics': {
    get: operations['getAnimeStatistics'];
  };
  '/anime/{id}/moreinfo': {
    get: operations['getAnimeMoreInfo'];
  };
  '/anime/{id}/recommendations': {
    get: operations['getAnimeRecommendations'];
  };
  '/anime/{id}/userupdates': {
    get: operations['getAnimeUserUpdates'];
  };
  '/anime/{id}/reviews': {
    get: operations['getAnimeReviews'];
  };
  '/anime/{id}/relations': {
    get: operations['getAnimeRelations'];
  };
  '/anime/{id}/themes': {
    get: operations['getAnimeThemes'];
  };
  '/anime/{id}/external': {
    get: operations['getAnimeExternal'];
  };
  '/anime/{id}/streaming': {
    get: operations['getAnimeStreaming'];
  };
  '/characters/{id}/full': {
    get: operations['getCharacterFullById'];
  };
  '/characters/{id}': {
    get: operations['getCharacterById'];
  };
  '/characters/{id}/anime': {
    get: operations['getCharacterAnime'];
  };
  '/characters/{id}/manga': {
    get: operations['getCharacterManga'];
  };
  '/characters/{id}/voices': {
    get: operations['getCharacterVoiceActors'];
  };
  '/characters/{id}/pictures': {
    get: operations['getCharacterPictures'];
  };
  '/clubs/{id}': {
    get: operations['getClubsById'];
  };
  '/clubs/{id}/members': {
    get: operations['getClubMembers'];
  };
  '/clubs/{id}/staff': {
    get: operations['getClubStaff'];
  };
  '/clubs/{id}/relations': {
    get: operations['getClubRelations'];
  };
  '/genres/anime': {
    get: operations['getAnimeGenres'];
  };
  '/genres/manga': {
    get: operations['getMangaGenres'];
  };
  '/magazines': {
    get: operations['getMagazines'];
  };
  '/manga/{id}/full': {
    get: operations['getMangaFullById'];
  };
  '/manga/{id}': {
    get: operations['getMangaById'];
  };
  '/manga/{id}/characters': {
    get: operations['getMangaCharacters'];
  };
  '/manga/{id}/news': {
    get: operations['getMangaNews'];
  };
  '/manga/{id}/forum': {
    get: operations['getMangaTopics'];
  };
  '/manga/{id}/pictures': {
    get: operations['getMangaPictures'];
  };
  '/manga/{id}/statistics': {
    get: operations['getMangaStatistics'];
  };
  '/manga/{id}/moreinfo': {
    get: operations['getMangaMoreInfo'];
  };
  '/manga/{id}/recommendations': {
    get: operations['getMangaRecommendations'];
  };
  '/manga/{id}/userupdates': {
    get: operations['getMangaUserUpdates'];
  };
  '/manga/{id}/reviews': {
    get: operations['getMangaReviews'];
  };
  '/manga/{id}/relations': {
    get: operations['getMangaRelations'];
  };
  '/manga/{id}/external': {
    get: operations['getMangaExternal'];
  };
  '/people/{id}/full': {
    get: operations['getPersonFullById'];
  };
  '/people/{id}': {
    get: operations['getPersonById'];
  };
  '/people/{id}/anime': {
    get: operations['getPersonAnime'];
  };
  '/people/{id}/voices': {
    get: operations['getPersonVoices'];
  };
  '/people/{id}/manga': {
    get: operations['getPersonManga'];
  };
  '/people/{id}/pictures': {
    get: operations['getPersonPictures'];
  };
  '/producers/{id}': {
    get: operations['getProducerById'];
  };
  '/producers/{id}/full': {
    get: operations['getProducerFullById'];
  };
  '/producers/{id}/external': {
    get: operations['getProducerExternal'];
  };
  '/random/anime': {
    get: operations['getRandomAnime'];
  };
  '/random/manga': {
    get: operations['getRandomManga'];
  };
  '/random/characters': {
    get: operations['getRandomCharacters'];
  };
  '/random/people': {
    get: operations['getRandomPeople'];
  };
  '/random/users': {
    get: operations['getRandomUsers'];
  };
  '/recommendations/anime': {
    get: operations['getRecentAnimeRecommendations'];
  };
  '/recommendations/manga': {
    get: operations['getRecentMangaRecommendations'];
  };
  '/reviews/anime': {
    get: operations['getRecentAnimeReviews'];
  };
  '/reviews/manga': {
    get: operations['getRecentMangaReviews'];
  };
  '/schedules': {
    get: operations['getSchedules'];
  };
  '/anime': {
    get: operations['getAnimeSearch'];
  };
  '/manga': {
    get: operations['getMangaSearch'];
  };
  '/people': {
    get: operations['getPeopleSearch'];
  };
  '/characters': {
    get: operations['getCharactersSearch'];
  };
  '/users': {
    get: operations['getUsersSearch'];
  };
  '/users/userbyid/{id}': {
    get: operations['getUserById'];
  };
  '/clubs': {
    get: operations['getClubsSearch'];
  };
  '/producers': {
    get: operations['getProducers'];
  };
  '/seasons/now': {
    get: operations['getSeasonNow'];
  };
  '/seasons/{year}/{season}': {
    get: operations['getSeason'];
  };
  '/seasons': {
    get: operations['getSeasonsList'];
  };
  '/seasons/upcoming': {
    get: operations['getSeasonUpcoming'];
  };
  '/top/anime': {
    get: operations['getTopAnime'];
  };
  '/top/manga': {
    get: operations['getTopManga'];
  };
  '/top/people': {
    get: operations['getTopPeople'];
  };
  '/top/characters': {
    get: operations['getTopCharacters'];
  };
  '/top/reviews': {
    get: operations['getTopReviews'];
  };
  '/users/{username}/full': {
    get: operations['getUserFullProfile'];
  };
  '/users/{username}': {
    get: operations['getUserProfile'];
  };
  '/users/{username}/statistics': {
    get: operations['getUserStatistics'];
  };
  '/users/{username}/favorites': {
    get: operations['getUserFavorites'];
  };
  '/users/{username}/userupdates': {
    get: operations['getUserUpdates'];
  };
  '/users/{username}/about': {
    get: operations['getUserAbout'];
  };
  '/users/{username}/history': {
    get: operations['getUserHistory'];
  };
  '/users/{username}/friends': {
    get: operations['getUserFriends'];
  };
  '/users/{username}/animelist': {
    /**
     * @deprecated
     * @description User Anime lists have been discontinued since May 1st, 2022. <a href='https://docs.google.com/document/d/1-6H-agSnqa8Mfmw802UYfGQrceIEnAaEh4uCXAPiX5A'>Read more</a>
     */
    get: operations['getUserAnimelist'];
  };
  '/users/{username}/mangalist': {
    /**
     * @deprecated
     * @description User Manga lists have been discontinued since May 1st, 2022. <a href='https://docs.google.com/document/d/1-6H-agSnqa8Mfmw802UYfGQrceIEnAaEh4uCXAPiX5A'>Read more</a>
     */
    get: operations['getUserMangaList'];
  };
  '/users/{username}/reviews': {
    get: operations['getUserReviews'];
  };
  '/users/{username}/recommendations': {
    get: operations['getUserRecommendations'];
  };
  '/users/{username}/clubs': {
    get: operations['getUserClubs'];
  };
  '/users/{username}/external': {
    get: operations['getUserExternal'];
  };
  '/watch/episodes': {
    get: operations['getWatchRecentEpisodes'];
  };
  '/watch/episodes/popular': {
    get: operations['getWatchPopularEpisodes'];
  };
  '/watch/promos': {
    get: operations['getWatchRecentPromos'];
  };
  '/watch/promos/popular': {
    get: operations['getWatchPopularPromos'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @description User's anime list status filter options
     * @enum {string}
     */
    user_anime_list_status_filter:
      | 'all'
      | 'watching'
      | 'completed'
      | 'onhold'
      | 'dropped'
      | 'plantowatch';
    /**
     * @description Available Anime order_by properties
     * @enum {string}
     */
    anime_search_query_orderby:
      | 'mal_id'
      | 'title'
      | 'start_date'
      | 'end_date'
      | 'episodes'
      | 'score'
      | 'scored_by'
      | 'rank'
      | 'popularity'
      | 'members'
      | 'favorites';
    /**
     * @description Available Anime audience ratings<br><br><b>Ratings</b><br><ul><li>G - All Ages</li><li>PG - Children</li><li>PG-13 - Teens 13 or older</li><li>R - 17+ (violence & profanity)</li><li>R+ - Mild Nudity</li><li>Rx - Hentai</li></ul>
     * @enum {string}
     */
    anime_search_query_rating: 'g' | 'pg' | 'pg13' | 'r17' | 'r' | 'rx';
    /**
     * @description Available Anime statuses
     * @enum {string}
     */
    anime_search_query_status: 'airing' | 'complete' | 'upcoming';
    /**
     * @description Available Anime types
     * @enum {string}
     */
    anime_search_query_type:
      | 'tv'
      | 'movie'
      | 'ova'
      | 'special'
      | 'ona'
      | 'music';
    /**
     * @description Available Character order_by properties
     * @enum {string}
     */
    characters_search_query_orderby: 'mal_id' | 'name' | 'favorites';
    /**
     * @description Club Search Query Category
     * @enum {string}
     */
    club_search_query_category:
      | 'anime'
      | 'manga'
      | 'actors_and_artists'
      | 'characters'
      | 'cities_and_neighborhoods'
      | 'companies'
      | 'conventions'
      | 'games'
      | 'japan'
      | 'music'
      | 'other'
      | 'schools';
    /**
     * @description Club Search Query OrderBy
     * @enum {string}
     */
    club_search_query_orderby: 'mal_id' | 'name' | 'members_count' | 'created';
    /**
     * @description Club Search Query Type
     * @enum {string}
     */
    club_search_query_type: 'public' | 'private' | 'secret';
    /**
     * @description Users Search Query Gender.
     * @enum {string}
     */
    users_search_query_gender: 'any' | 'male' | 'female' | 'nonbinary';
    /**
     * @description Filter genres by type
     * @enum {string}
     */
    genre_query_filter:
      | 'genres'
      | 'explicit_genres'
      | 'themes'
      | 'demographics';
    /**
     * @description Order by magazine data
     * @enum {string}
     */
    magazines_query_orderby: 'mal_id' | 'name' | 'count';
    /**
     * @description User's anime list status filter options
     * @enum {string}
     */
    user_manga_list_status_filter:
      | 'all'
      | 'reading'
      | 'completed'
      | 'onhold'
      | 'dropped'
      | 'plantoread';
    /**
     * @description Available Manga order_by properties
     * @enum {string}
     */
    manga_search_query_orderby:
      | 'mal_id'
      | 'title'
      | 'start_date'
      | 'end_date'
      | 'chapters'
      | 'volumes'
      | 'score'
      | 'scored_by'
      | 'rank'
      | 'popularity'
      | 'members'
      | 'favorites';
    /**
     * @description Available Manga statuses
     * @enum {string}
     */
    manga_search_query_status:
      | 'publishing'
      | 'complete'
      | 'hiatus'
      | 'discontinued'
      | 'upcoming';
    /**
     * @description Available Manga types
     * @enum {string}
     */
    manga_search_query_type:
      | 'manga'
      | 'novel'
      | 'lightnovel'
      | 'oneshot'
      | 'doujin'
      | 'manhwa'
      | 'manhua';
    /**
     * @description Available People order_by properties
     * @enum {string}
     */
    people_search_query_orderby: 'mal_id' | 'name' | 'birthday' | 'favorites';
    /**
     * @description Producers Search Query Order By
     * @enum {string}
     */
    producers_query_orderby: 'mal_id' | 'count' | 'favorites' | 'established';
    /**
     * @description Search query sort direction
     * @enum {string}
     */
    search_query_sort: 'desc' | 'asc';
    /**
     * @description Top items filter types
     * @enum {string}
     */
    top_anime_filter: 'airing' | 'upcoming' | 'bypopularity' | 'favorite';
    /**
     * @description Top items filter types
     * @enum {string}
     */
    top_manga_filter: 'publishing' | 'upcoming' | 'bypopularity' | 'favorite';
    /**
     * @description The type of reviews to filter by. Defaults to anime.
     * @enum {string}
     */
    top_reviews_type_enum: 'anime' | 'manga';
    /** @description Anime Episodes Resource */
    anime_episodes: {
      data?: {
        /** @description MyAnimeList ID */
        mal_id?: number;
        /** @description MyAnimeList URL. This is the URL of the episode's video. If there is no video url, this will be null. */
        url?: string | null;
        /** @description Title */
        title?: string;
        /** @description Title Japanese */
        title_japanese?: string | null;
        /** @description title_romanji */
        title_romanji?: string | null;
        /** @description Episode duration in seconds */
        duration?: number | null;
        /** @description Aired Date ISO8601 */
        aired?: string | null;
        /** @description Filler episode */
        filler?: boolean;
        /** @description Recap episode */
        recap?: boolean;
        /** @description Episode discussion forum URL */
        forum_url?: string | null;
      }[];
    } & components['schemas']['pagination'];
    /** @description Anime News Resource */
    anime_news: components['schemas']['pagination'] &
      components['schemas']['news'];
    /** @description Anime Videos Episodes Resource */
    anime_videos_episodes: {
      data?: {
        /** @description MyAnimeList ID or Episode Number */
        mal_id?: number;
        /** @description Episode Title */
        title?: string;
        /** @description Episode Subtitle */
        episode?: string;
        /** @description Episode Page URL */
        url?: string;
        images?: components['schemas']['common_images'];
      }[];
    } & components['schemas']['pagination'];
    /** @description Character Pictures */
    character_pictures: {
      data?: {
        /** @description Default JPG Image Size URL */
        image_url?: string | null;
        /** @description Large JPG Image Size URL */
        large_image_url?: string | null;
      }[];
    };
    /** @description Club Member */
    club_member: {
      data?: {
        /** @description User's username */
        username?: string;
        /** @description User URL */
        url?: string;
        images?: components['schemas']['user_images'];
      }[];
    };
    /** @description Manga News Resource */
    manga_news: components['schemas']['pagination'] &
      components['schemas']['news'];
    /** @description Manga Pictures */
    manga_pictures: {
      data?: components['schemas']['manga_images'][];
    };
    /** @description Character Pictures */
    person_pictures: {
      data?: components['schemas']['people_images'][];
    };
    /** @description Random Resources */
    random: {
      data?: (
        | components['schemas']['anime']
        | components['schemas']['manga']
        | components['schemas']['character']
        | components['schemas']['person']
      )[];
    };
    /** @description Anime resources currently airing */
    schedules: {
      data?: components['schemas']['anime'][];
    } & components['schemas']['pagination_plus'];
    /** @description User Results */
    users_search: {
      data?: {
        /** @description MyAnimeList URL */
        url?: string;
        /** @description MyAnimeList Username */
        username?: string;
        images?: components['schemas']['user_images'];
        /** @description Last Online Date ISO8601 */
        last_online?: string;
      }[];
    } & components['schemas']['pagination'];
    /** @description List of available seasons */
    seasons: {
      data?: {
        /** @description Year */
        year?: number;
        /** @description List of available seasons */
        seasons?: string[];
      }[];
    };
    /** @description Anime & Manga Reviews Resource */
    reviews_collection: {
      data?: (
        | components['schemas']['anime_review']
        | components['schemas']['manga_review']
      )[];
    };
    /** @description User Friends */
    user_friends: {
      data?: ({
        user?: components['schemas']['user_meta'];
      } & {
        /** @description Last Online Date ISO8601 format */
        last_online?: string;
        /** @description Friends Since Date ISO8601 format */
        friends_since?: string;
      })[];
    } & components['schemas']['pagination'];
    /** @description User Clubs */
    user_clubs: {
      data?: {
        /** @description MyAnimeList ID */
        mal_id?: number;
        /** @description Club Name */
        name?: string;
        /** @description Club URL */
        url?: string;
      }[];
    } & components['schemas']['pagination'];
    /** @description Watch Episodes */
    watch_episodes: {
      data?: {
        entry?: components['schemas']['anime_meta'];
        /** @description Recent Episodes (max 2 listed) */
        episodes?: {
          /** @description MyAnimeList ID */
          mal_id?: string;
          /** @description MyAnimeList URL */
          url?: string;
          /** @description Episode Title */
          title?: string;
          /** @description For MyAnimeList Premium Users */
          premium?: boolean;
        }[];
        /** @description Region Locked Episode */
        region_locked?: boolean;
      }[];
    } & components['schemas']['pagination'];
    /** @description Watch Promos */
    watch_promos: components['schemas']['pagination'] &
      ({
        /** @description Promo Title */
        title?: string;
      } & {
        data?: {
          entry?: components['schemas']['anime_meta'];
          trailer?: components['schemas']['trailer'][];
        }[];
      });
    /** @description Anime Characters Resource */
    anime_characters: {
      data?: {
        /** @description Character details */
        character?: {
          /** @description MyAnimeList ID */
          mal_id?: number;
          /** @description MyAnimeList URL */
          url?: string;
          images?: components['schemas']['character_images'];
          /** @description Character Name */
          name?: string;
        };
        /** @description Character's Role */
        role?: string;
        voice_actors?: {
          person?: {
            mal_id?: number;
            url?: string;
            images?: components['schemas']['people_images'];
            name?: string;
          };
          language?: string;
        }[];
      }[];
    };
    /** @description Anime Collection Resource */
    anime_search: {
      data?: components['schemas']['anime'][];
    } & components['schemas']['pagination_plus'];
    /** @description Anime Episode Resource */
    anime_episode: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Title */
      title?: string;
      /** @description Title Japanese */
      title_japanese?: string | null;
      /** @description title_romanji */
      title_romanji?: string | null;
      /** @description Episode duration in seconds */
      duration?: number | null;
      /** @description Aired Date ISO8601 */
      aired?: string | null;
      /** @description Filler episode */
      filler?: boolean;
      /** @description Recap episode */
      recap?: boolean;
      /** @description Episode Synopsis */
      synopsis?: string | null;
    };
    /** @description Full anime Resource */
    anime_full: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['anime_images'];
      trailer?: components['schemas']['trailer_base'];
      /** @description Whether the entry is pending approval on MAL or not */
      approved?: boolean;
      /** @description All titles */
      titles?: components['schemas']['title'][];
      /**
       * @deprecated
       * @description Title
       */
      title?: string;
      /**
       * @deprecated
       * @description English Title
       */
      title_english?: string | null;
      /**
       * @deprecated
       * @description Japanese Title
       */
      title_japanese?: string | null;
      /**
       * @deprecated
       * @description Other Titles
       */
      title_synonyms?: string[];
      /**
       * @description Anime Type
       * @enum {string|null}
       */
      type?: 'TV' | 'OVA' | 'Movie' | 'Special' | 'ONA' | 'Music' | null;
      /** @description Original Material/Source adapted from */
      source?: string | null;
      /** @description Episode count */
      episodes?: number | null;
      /**
       * @description Airing status
       * @enum {string|null}
       */
      status?: 'Finished Airing' | 'Currently Airing' | 'Not yet aired' | null;
      /** @description Airing boolean */
      airing?: boolean;
      aired?: components['schemas']['daterange'];
      /** @description Parsed raw duration */
      duration?: string | null;
      /**
       * @description Anime audience rating
       * @enum {string|null}
       */
      rating?:
        | 'G - All Ages'
        | 'PG - Children'
        | 'PG-13 - Teens 13 or older'
        | 'R - 17+ (violence & profanity)'
        | 'R+ - Mild Nudity'
        | 'Rx - Hentai'
        | null;
      /**
       * Format: float
       * @description Score
       */
      score?: number | null;
      /** @description Number of users */
      scored_by?: number | null;
      /** @description Ranking */
      rank?: number | null;
      /** @description Popularity */
      popularity?: number | null;
      /** @description Number of users who have added this entry to their list */
      members?: number | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number | null;
      /** @description Synopsis */
      synopsis?: string | null;
      /** @description Background */
      background?: string | null;
      /**
       * @description Season
       * @enum {string|null}
       */
      season?: 'summer' | 'winter' | 'spring' | 'fall' | null;
      /** @description Year */
      year?: number | null;
      broadcast?: components['schemas']['broadcast'];
      producers?: components['schemas']['mal_url'][];
      licensors?: components['schemas']['mal_url'][];
      studios?: components['schemas']['mal_url'][];
      genres?: components['schemas']['mal_url'][];
      explicit_genres?: components['schemas']['mal_url'][];
      themes?: components['schemas']['mal_url'][];
      demographics?: components['schemas']['mal_url'][];
      relations?: {
        /** @description Relation type */
        relation?: string;
        entry?: components['schemas']['mal_url'][];
      }[];
      theme?: {
        openings?: string[];
        endings?: string[];
      };
      external?: {
        name?: string;
        url?: string;
      }[];
      streaming?: {
        name?: string;
        url?: string;
      }[];
    };
    /** @description Anime Relations */
    anime_relations: {
      data?: {
        /** @description Relation type */
        relation?: string;
        entry?: components['schemas']['mal_url'][];
      }[];
    };
    /** @description Anime Resource */
    anime: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['anime_images'];
      trailer?: components['schemas']['trailer_base'];
      /** @description Whether the entry is pending approval on MAL or not */
      approved?: boolean;
      /** @description All titles */
      titles?: components['schemas']['title'][];
      /**
       * @deprecated
       * @description Title
       */
      title?: string;
      /**
       * @deprecated
       * @description English Title
       */
      title_english?: string | null;
      /**
       * @deprecated
       * @description Japanese Title
       */
      title_japanese?: string | null;
      /**
       * @deprecated
       * @description Other Titles
       */
      title_synonyms?: string[];
      /**
       * @description Anime Type
       * @enum {string|null}
       */
      type?: 'TV' | 'OVA' | 'Movie' | 'Special' | 'ONA' | 'Music' | null;
      /** @description Original Material/Source adapted from */
      source?: string | null;
      /** @description Episode count */
      episodes?: number | null;
      /**
       * @description Airing status
       * @enum {string|null}
       */
      status?: 'Finished Airing' | 'Currently Airing' | 'Not yet aired' | null;
      /** @description Airing boolean */
      airing?: boolean;
      aired?: components['schemas']['daterange'];
      /** @description Parsed raw duration */
      duration?: string | null;
      /**
       * @description Anime audience rating
       * @enum {string|null}
       */
      rating?:
        | 'G - All Ages'
        | 'PG - Children'
        | 'PG-13 - Teens 13 or older'
        | 'R - 17+ (violence & profanity)'
        | 'R+ - Mild Nudity'
        | 'Rx - Hentai'
        | null;
      /**
       * Format: float
       * @description Score
       */
      score?: number | null;
      /** @description Number of users */
      scored_by?: number | null;
      /** @description Ranking */
      rank?: number | null;
      /** @description Popularity */
      popularity?: number | null;
      /** @description Number of users who have added this entry to their list */
      members?: number | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number | null;
      /** @description Synopsis */
      synopsis?: string | null;
      /** @description Background */
      background?: string | null;
      /**
       * @description Season
       * @enum {string|null}
       */
      season?: 'summer' | 'winter' | 'spring' | 'fall' | null;
      /** @description Year */
      year?: number | null;
      broadcast?: components['schemas']['broadcast'];
      producers?: components['schemas']['mal_url'][];
      licensors?: components['schemas']['mal_url'][];
      studios?: components['schemas']['mal_url'][];
      genres?: components['schemas']['mal_url'][];
      explicit_genres?: components['schemas']['mal_url'][];
      themes?: components['schemas']['mal_url'][];
      demographics?: components['schemas']['mal_url'][];
    };
    /** @description Anime Staff Resource */
    anime_staff: {
      data?: {
        /** @description Person details */
        person?: {
          /** @description MyAnimeList ID */
          mal_id?: number;
          /** @description MyAnimeList URL */
          url?: string;
          images?: components['schemas']['people_images'];
          /** @description Name */
          name?: string;
        };
        /** @description Staff Positions */
        positions?: string[];
      }[];
    };
    /** @description Anime Statistics Resource */
    anime_statistics: {
      data?: {
        /** @description Number of users watching the resource */
        watching?: number;
        /** @description Number of users who have completed the resource */
        completed?: number;
        /** @description Number of users who have put the resource on hold */
        on_hold?: number;
        /** @description Number of users who have dropped the resource */
        dropped?: number;
        /** @description Number of users who have planned to watch the resource */
        plan_to_watch?: number;
        /** @description Total number of users who have the resource added to their lists */
        total?: number;
        scores?: {
          /** @description Scoring value */
          score?: number;
          /** @description Number of votes for this score */
          votes?: number;
          /**
           * Format: float
           * @description Percentage of votes for this score
           */
          percentage?: number;
        }[];
      };
    };
    /** @description Anime Opening and Ending Themes */
    anime_themes: {
      data?: {
        openings?: string[];
        endings?: string[];
      };
    };
    /** @description Anime Videos Resource */
    anime_videos: {
      data?: {
        promo?: {
          /** @description Title */
          title?: string;
          trailer?: components['schemas']['trailer'];
        }[];
        episodes?: {
          /** @description MyAnimeList ID */
          mal_id?: number;
          /** @description MyAnimeList URL */
          url?: string;
          /** @description Title */
          title?: string;
          /** @description Episode */
          episode?: string;
          images?: components['schemas']['common_images'];
        }[];
        music_videos?: {
          /** @description Title */
          title?: string;
          video?: components['schemas']['trailer'];
          meta?: {
            title?: string | null;
            author?: string | null;
          };
        }[];
      };
    };
    /** @description Character casted in anime */
    character_anime: {
      data?: {
        /** @description Character's Role */
        role?: string;
        anime?: components['schemas']['anime_meta'];
      }[];
    };
    /** @description Characters Search Resource */
    characters_search: {
      data?: components['schemas']['character'][];
    } & components['schemas']['pagination_plus'];
    /** @description Character Resource */
    character_full: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['character_images'];
      /** @description Name */
      name?: string;
      /** @description Name */
      name_kanji?: string | null;
      /** @description Other Names */
      nicknames?: string[];
      /** @description Number of users who have favorited this entry */
      favorites?: number;
      /** @description Biography */
      about?: string | null;
      anime?: {
        /** @description Character's Role */
        role?: string;
        anime?: components['schemas']['anime_meta'];
      }[];
      manga?: {
        /** @description Character's Role */
        role?: string;
        manga?: components['schemas']['manga_meta'];
      }[];
      voices?: {
        /** @description Character's Role */
        language?: string;
        person?: components['schemas']['person_meta'];
      }[];
    };
    /** @description Character casted in manga */
    character_manga: {
      data?: {
        /** @description Character's Role */
        role?: string;
        manga?: components['schemas']['manga_meta'];
      }[];
    };
    /** @description Character Resource */
    character: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['character_images'];
      /** @description Name */
      name?: string;
      /** @description Name */
      name_kanji?: string | null;
      /** @description Other Names */
      nicknames?: string[];
      /** @description Number of users who have favorited this entry */
      favorites?: number;
      /** @description Biography */
      about?: string | null;
    };
    /** @description Character voice actors */
    character_voice_actors: {
      data?: {
        /** @description Character's Role */
        language?: string;
        person?: components['schemas']['person_meta'];
      }[];
    };
    /** @description Clubs Search Resource */
    clubs_search: {
      data?: components['schemas']['club'][];
    } & components['schemas']['pagination'];
    /** @description Club Relations */
    club_relations: {
      data?: {
        anime?: components['schemas']['mal_url'][];
        manga?: components['schemas']['mal_url'][];
        characters?: components['schemas']['mal_url'][];
      };
    };
    /** @description Club Resource */
    club: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description Club name */
      name?: string;
      /** @description Club URL */
      url?: string;
      images?: components['schemas']['common_images'];
      /** @description Number of club members */
      members?: number;
      /**
       * @description Club Category
       * @enum {string}
       */
      category?:
        | 'actors & artists'
        | 'anime'
        | 'characters'
        | 'cities & neighborhoods'
        | 'companies'
        | 'conventions'
        | 'games'
        | 'japan'
        | 'manga'
        | 'music'
        | 'others'
        | 'schools';
      /** @description Date Created ISO8601 */
      created?: string;
      /**
       * @description Club access
       * @enum {string}
       */
      access?: 'public' | 'private' | 'secret';
    };
    /** @description Club Staff Resource */
    club_staff: {
      data?: {
        /** @description User URL */
        url?: string;
        /** @description User's username */
        username?: string;
      }[];
    };
    /** @description Youtube Details */
    trailer: components['schemas']['trailer_base'] &
      components['schemas']['trailer_images'];
    /** @description Youtube Details */
    trailer_base: {
      /** @description YouTube ID */
      youtube_id?: string | null;
      /** @description YouTube URL */
      url?: string | null;
      /** @description Parsed Embed URL */
      embed_url?: string | null;
    };
    /** @description Youtube Images */
    trailer_images: {
      images?: {
        /** @description Default Image Size URL (120x90) */
        image_url?: string | null;
        /** @description Small Image Size URL (640x480) */
        small_image_url?: string | null;
        /** @description Medium Image Size URL (320x180) */
        medium_image_url?: string | null;
        /** @description Large Image Size URL (480x360) */
        large_image_url?: string | null;
        /** @description Maximum Image Size URL (1280x720) */
        maximum_image_url?: string | null;
      };
    };
    /** @description Date range */
    daterange: {
      /** @description Date ISO8601 */
      from?: string | null;
      /** @description Date ISO8601 */
      to?: string | null;
      /** @description Date Prop */
      prop?: {
        /** @description Date Prop From */
        from?: {
          /** @description Day */
          day?: number | null;
          /** @description Month */
          month?: number | null;
          /** @description Year */
          year?: number | null;
        };
        /** @description Date Prop To */
        to?: {
          /** @description Day */
          day?: number | null;
          /** @description Month */
          month?: number | null;
          /** @description Year */
          year?: number | null;
        };
        /** @description Raw parsed string */
        string?: string | null;
      };
    };
    /** @description Broadcast Details */
    broadcast: {
      /** @description Day of the week */
      day?: string | null;
      /** @description Time in 24 hour format */
      time?: string | null;
      /** @description Timezone (Tz Database format https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) */
      timezone?: string | null;
      /** @description Raw parsed broadcast string */
      string?: string | null;
    };
    /** @description Parsed URL Data */
    mal_url: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description Type of resource */
      type?: string;
      /** @description Resource Name/Title */
      name?: string;
      /** @description MyAnimeList URL */
      url?: string;
    };
    /** @description Parsed URL Data */
    mal_url_2: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description Type of resource */
      type?: string;
      /** @description Resource Name/Title */
      title?: string;
      /** @description MyAnimeList URL */
      url?: string;
    };
    /** @description Entry Meta data */
    entry_meta: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Image URL */
      image_url?: string;
      /** @description Entry Name/Title */
      name?: string;
    };
    /** @description Related resources */
    relation: {
      /** @description Relation type */
      relation?: string;
      /** @description Related entries */
      entry?: components['schemas']['mal_url'][];
    };
    pagination: {
      pagination?: {
        last_visible_page?: number;
        has_next_page?: boolean;
      };
    };
    pagination_plus: {
      pagination?: {
        last_visible_page?: number;
        has_next_page?: boolean;
        items?: {
          count?: number;
          total?: number;
          per_page?: number;
        };
      };
    };
    user_meta: {
      /** @description MyAnimeList Username */
      username?: string;
      /** @description MyAnimeList Profile URL */
      url?: string;
      images?: components['schemas']['user_images'];
    };
    /** @description User Meta By ID */
    user_by_id: {
      /** @description MyAnimeList URL */
      url?: string;
      /** @description MyAnimeList Username */
      username?: string;
    };
    user_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
      };
      /** @description Available images in WEBP */
      webp?: {
        /** @description Image URL WEBP */
        image_url?: string | null;
      };
    };
    anime_meta: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['anime_images'];
      /** @description Entry title */
      title?: string;
    };
    manga_meta: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['manga_images'];
      /** @description Entry title */
      title?: string;
    };
    character_meta: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['character_images'];
      /** @description Entry name */
      name?: string;
    };
    person_meta: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['people_images'];
      /** @description Entry name */
      name?: string;
    };
    anime_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
        /** @description Small Image URL JPG */
        small_image_url?: string | null;
        /** @description Image URL JPG */
        large_image_url?: string | null;
      };
      /** @description Available images in WEBP */
      webp?: {
        /** @description Image URL WEBP */
        image_url?: string | null;
        /** @description Small Image URL WEBP */
        small_image_url?: string | null;
        /** @description Image URL WEBP */
        large_image_url?: string | null;
      };
    };
    manga_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
        /** @description Small Image URL JPG */
        small_image_url?: string | null;
        /** @description Image URL JPG */
        large_image_url?: string | null;
      };
      /** @description Available images in WEBP */
      webp?: {
        /** @description Image URL WEBP */
        image_url?: string | null;
        /** @description Small Image URL WEBP */
        small_image_url?: string | null;
        /** @description Image URL WEBP */
        large_image_url?: string | null;
      };
    };
    character_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
        /** @description Small Image URL JPG */
        small_image_url?: string | null;
      };
      /** @description Available images in WEBP */
      webp?: {
        /** @description Image URL WEBP */
        image_url?: string | null;
        /** @description Small Image URL WEBP */
        small_image_url?: string | null;
      };
    };
    people_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
      };
    };
    common_images: {
      /** @description Available images in JPG */
      jpg?: {
        /** @description Image URL JPG */
        image_url?: string | null;
      };
    };
    title: {
      /** @description Title type */
      type?: string;
      /** @description Title value */
      title?: string;
    };
    /** @description External links */
    external_links: {
      data?: {
        name?: string;
        url?: string;
      }[];
    };
    /** @description Forum Resource */
    forum: {
      data?: {
        /** @description MyAnimeList ID */
        mal_id?: number;
        /** @description MyAnimeList URL */
        url?: string;
        /** @description Title */
        title?: string;
        /** @description Post Date ISO8601 */
        date?: string;
        /** @description Author MyAnimeList Username */
        author_username?: string;
        /** @description Author Profile URL */
        author_url?: string;
        /** @description Comment count */
        comments?: number;
        /** @description Last comment details */
        last_comment?: {
          /** @description Last comment URL */
          url?: string;
          /** @description Author MyAnimeList Username */
          author_username?: string;
          /** @description Author Profile URL */
          author_url?: string;
          /** @description Last comment date posted ISO8601 */
          date?: string | null;
        };
      }[];
    };
    /** @description Genres Collection Resource */
    genres: {
      data?: components['schemas']['genre'][];
    };
    /** @description Genre Resource */
    genre: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description Genre Name */
      name?: string;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Genre's entry count */
      count?: number;
    };
    /** @description Magazine Collection Resource */
    magazines: {
      data?: components['schemas']['magazine'][];
    } & components['schemas']['pagination'];
    /** @description Magazine Resource */
    magazine: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description Magazine Name */
      name?: string;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Magazine's manga count */
      count?: number;
    };
    /** @description Manga Characters Resource */
    manga_characters: {
      data?: {
        character?: components['schemas']['character_meta'];
        /** @description Character's Role */
        role?: string;
      }[];
    };
    /** @description Manga Search Resource */
    manga_search: {
      data?: components['schemas']['manga'][];
    } & components['schemas']['pagination_plus'];
    /** @description Manga Resource */
    manga_full: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['manga_images'];
      /** @description Whether the entry is pending approval on MAL or not */
      approved?: boolean;
      /** @description All Titles */
      titles?: components['schemas']['title'][];
      /**
       * @deprecated
       * @description Title
       */
      title?: string;
      /**
       * @deprecated
       * @description English Title
       */
      title_english?: string | null;
      /**
       * @deprecated
       * @description Japanese Title
       */
      title_japanese?: string | null;
      /**
       * @deprecated
       * @description Other Titles
       */
      title_synonyms?: string[];
      /**
       * @description Manga Type
       * @enum {string|null}
       */
      type?:
        | 'Manga'
        | 'Novel'
        | 'Light Novel'
        | 'One-shot'
        | 'Doujinshi'
        | 'Manhua'
        | 'Manhwa'
        | 'OEL'
        | null;
      /** @description Chapter count */
      chapters?: number | null;
      /** @description Volume count */
      volumes?: number | null;
      /**
       * @description Publishing status
       * @enum {string}
       */
      status?:
        | 'Finished'
        | 'Publishing'
        | 'On Hiatus'
        | 'Discontinued'
        | 'Not yet published';
      /** @description Publishing boolean */
      publishing?: boolean;
      published?: components['schemas']['daterange'];
      /**
       * Format: float
       * @description Score
       */
      score?: number | null;
      /** @description Number of users */
      scored_by?: number | null;
      /** @description Ranking */
      rank?: number | null;
      /** @description Popularity */
      popularity?: number | null;
      /** @description Number of users who have added this entry to their list */
      members?: number | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number | null;
      /** @description Synopsis */
      synopsis?: string | null;
      /** @description Background */
      background?: string | null;
      authors?: components['schemas']['mal_url'][];
      serializations?: components['schemas']['mal_url'][];
      genres?: components['schemas']['mal_url'][];
      explicit_genres?: components['schemas']['mal_url'][];
      themes?: components['schemas']['mal_url'][];
      demographics?: components['schemas']['mal_url'][];
      relations?: {
        /** @description Relation type */
        relation?: string;
        entry?: components['schemas']['mal_url'][];
      }[];
      external?: {
        name?: string;
        url?: string;
      }[];
    };
    /** @description Manga Resource */
    manga: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['manga_images'];
      /** @description Whether the entry is pending approval on MAL or not */
      approved?: boolean;
      /** @description All Titles */
      titles?: components['schemas']['title'][];
      /**
       * @deprecated
       * @description Title
       */
      title?: string;
      /**
       * @deprecated
       * @description English Title
       */
      title_english?: string | null;
      /**
       * @deprecated
       * @description Japanese Title
       */
      title_japanese?: string | null;
      /**
       * @description Manga Type
       * @enum {string|null}
       */
      type?:
        | 'Manga'
        | 'Novel'
        | 'Light Novel'
        | 'One-shot'
        | 'Doujinshi'
        | 'Manhua'
        | 'Manhwa'
        | 'OEL'
        | null;
      /** @description Chapter count */
      chapters?: number | null;
      /** @description Volume count */
      volumes?: number | null;
      /**
       * @description Publishing status
       * @enum {string}
       */
      status?:
        | 'Finished'
        | 'Publishing'
        | 'On Hiatus'
        | 'Discontinued'
        | 'Not yet published';
      /** @description Publishing boolean */
      publishing?: boolean;
      published?: components['schemas']['daterange'];
      /**
       * Format: float
       * @description Score
       */
      score?: number | null;
      /** @description Number of users */
      scored_by?: number | null;
      /** @description Ranking */
      rank?: number | null;
      /** @description Popularity */
      popularity?: number | null;
      /** @description Number of users who have added this entry to their list */
      members?: number | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number | null;
      /** @description Synopsis */
      synopsis?: string | null;
      /** @description Background */
      background?: string | null;
      authors?: components['schemas']['mal_url'][];
      serializations?: components['schemas']['mal_url'][];
      genres?: components['schemas']['mal_url'][];
      explicit_genres?: components['schemas']['mal_url'][];
      themes?: components['schemas']['mal_url'][];
      demographics?: components['schemas']['mal_url'][];
    };
    /** @description Manga Statistics Resource */
    manga_statistics: {
      data?: {
        /** @description Number of users reading the resource */
        reading?: number;
        /** @description Number of users who have completed the resource */
        completed?: number;
        /** @description Number of users who have put the resource on hold */
        on_hold?: number;
        /** @description Number of users who have dropped the resource */
        dropped?: number;
        /** @description Number of users who have planned to read the resource */
        plan_to_read?: number;
        /** @description Total number of users who have the resource added to their lists */
        total?: number;
        scores?: {
          /** @description Scoring value */
          score?: number;
          /** @description Number of votes for this score */
          votes?: number;
          /**
           * Format: float
           * @description Percentage of votes for this score
           */
          percentage?: number;
        }[];
      };
    };
    /** @description More Info Resource */
    moreinfo: {
      data?: {
        /** @description Additional information on the entry */
        moreinfo?: string | null;
      };
    };
    news: {
      data?: {
        /** @description MyAnimeList ID */
        mal_id?: number;
        /** @description MyAnimeList URL */
        url?: string;
        /** @description Title */
        title?: string;
        /** @description Post Date ISO8601 */
        date?: string;
        /** @description Author MyAnimeList Username */
        author_username?: string;
        /** @description Author Profile URL */
        author_url?: string;
        /** @description Forum topic URL */
        forum_url?: string;
        images?: components['schemas']['common_images'];
        /** @description Comment count */
        comments?: number;
        /** @description Excerpt */
        excerpt?: string;
      }[];
    };
    /** @description Person anime staff positions */
    person_anime: {
      data?: {
        /** @description Person's position */
        position?: string;
        anime?: components['schemas']['anime_meta'];
      }[];
    };
    /** @description People Search */
    people_search: {
      data?: components['schemas']['person'][];
    } & components['schemas']['pagination_plus'];
    /** @description Person Resource */
    person_full: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Person's website URL */
      website_url?: string | null;
      images?: components['schemas']['people_images'];
      /** @description Name */
      name?: string;
      /** @description Given Name */
      given_name?: string | null;
      /** @description Family Name */
      family_name?: string | null;
      /** @description Other Names */
      alternate_names?: string[];
      /** @description Birthday Date ISO8601 */
      birthday?: string | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number;
      /** @description Biography */
      about?: string | null;
      anime?: {
        /** @description Person's position */
        position?: string;
        anime?: components['schemas']['anime_meta'];
      }[];
      manga?: {
        /** @description Person's position */
        position?: string;
        manga?: components['schemas']['manga_meta'];
      }[];
      voices?: {
        /** @description Person's Character's role in the anime */
        role?: string;
        anime?: components['schemas']['anime_meta'];
        character?: components['schemas']['character_meta'];
      }[];
    };
    /** @description Person's mangaography */
    person_manga: {
      data?: {
        /** @description Person's position */
        position?: string;
        manga?: components['schemas']['manga_meta'];
      }[];
    };
    /** @description Person Resource */
    person: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description Person's website URL */
      website_url?: string | null;
      images?: components['schemas']['people_images'];
      /** @description Name */
      name?: string;
      /** @description Given Name */
      given_name?: string | null;
      /** @description Family Name */
      family_name?: string | null;
      /** @description Other Names */
      alternate_names?: string[];
      /** @description Birthday Date ISO8601 */
      birthday?: string | null;
      /** @description Number of users who have favorited this entry */
      favorites?: number;
      /** @description Biography */
      about?: string | null;
    };
    /** @description Person's voice acting roles */
    person_voice_acting_roles: {
      data?: {
        /** @description Person's Character's role in the anime */
        role?: string;
        anime?: components['schemas']['anime_meta'];
        character?: components['schemas']['character_meta'];
      }[];
    };
    /** @description Pictures Resource */
    pictures: {
      data?: {
        images?: components['schemas']['anime_images'];
      }[];
    };
    /** @description Pictures Resource */
    pictures_variants: {
      data?: {
        images?: components['schemas']['common_images'];
      }[];
    };
    /** @description Producers Collection Resource */
    producers: {
      data?: components['schemas']['producer'][];
    } & components['schemas']['pagination'];
    /** @description Producers Resource */
    producer_full: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description All titles */
      titles?: components['schemas']['title'][];
      images?: components['schemas']['common_images'];
      /** @description Producers's member favorites count */
      favorites?: number;
      /** @description Producers's anime count */
      count?: number;
      /** @description Established Date ISO8601 */
      established?: string | null;
      /** @description About the Producer */
      about?: string | null;
      external?: {
        name?: string;
        url?: string;
      }[];
    };
    /** @description Producers Resource */
    producer: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList URL */
      url?: string;
      /** @description All titles */
      titles?: components['schemas']['title'][];
      images?: components['schemas']['common_images'];
      /** @description Producers's member favorites count */
      favorites?: number;
      /** @description Producers's anime count */
      count?: number;
      /** @description Established Date ISO8601 */
      established?: string | null;
      /** @description About the Producer */
      about?: string | null;
    };
    user_about: {
      data?: {
        /** @description User About. NOTE: About information is customizable by users through BBCode on MyAnimeList. This means users can add multimedia content, different text sizes, etc. Due to this freeform, Jikan returns parsed HTML. Validate on your end! */
        about?: string | null;
      }[];
    };
    user_favorites: {
      /** @description Favorite Anime */
      anime?: ({
        type?: string;
        start_year?: number;
      } & components['schemas']['anime_meta'])[];
      /** @description Favorite Manga */
      manga?: ({
        type?: string;
        start_year?: number;
      } & components['schemas']['manga_meta'])[];
      /** @description Favorite Characters */
      characters?: (components['schemas']['character_meta'] &
        components['schemas']['mal_url_2'])[];
      /** @description Favorite People */
      people?: components['schemas']['character_meta'][];
    };
    /** @description Transform the resource into an array. */
    user_profile_full: {
      /** @description MyAnimeList ID */
      mal_id?: number | null;
      /** @description MyAnimeList Username */
      username?: string;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['user_images'];
      /** @description Last Online Date ISO8601 */
      last_online?: string | null;
      /** @description User Gender */
      gender?: string | null;
      /** @description Birthday Date ISO8601 */
      birthday?: string | null;
      /** @description Location */
      location?: string | null;
      /** @description Joined Date ISO8601 */
      joined?: string | null;
      statistics?: {
        /** @description Anime Statistics */
        anime?: {
          /**
           * Format: float
           * @description Number of days spent watching Anime
           */
          days_watched?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Anime Watching */
          watching?: number;
          /** @description Anime Completed */
          completed?: number;
          /** @description Anime On-Hold */
          on_hold?: number;
          /** @description Anime Dropped */
          dropped?: number;
          /** @description Anime Planned to Watch */
          plan_to_watch?: number;
          /** @description Total Anime entries on User list */
          total_entries?: number;
          /** @description Anime re-watched */
          rewatched?: number;
          /** @description Number of Anime Episodes Watched */
          episodes_watched?: number;
        };
        /** @description Manga Statistics */
        manga?: {
          /**
           * Format: float
           * @description Number of days spent reading Manga
           */
          days_read?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Manga Reading */
          reading?: number;
          /** @description Manga Completed */
          completed?: number;
          /** @description Manga On-Hold */
          on_hold?: number;
          /** @description Manga Dropped */
          dropped?: number;
          /** @description Manga Planned to Read */
          plan_to_read?: number;
          /** @description Total Manga entries on User list */
          total_entries?: number;
          /** @description Manga re-read */
          reread?: number;
          /** @description Number of Manga Chapters Read */
          chapters_read?: number;
          /** @description Number of Manga Volumes Read */
          volumes_read?: number;
        };
      };
      external?: {
        name?: string;
        url?: string;
      }[];
    };
    user_history: {
      data?: components['schemas']['history'][];
    };
    /** @description Transform the resource into an array. */
    history: {
      entry?: components['schemas']['mal_url'];
      /** @description Number of episodes/chapters watched/read */
      increment?: number;
      /** @description Date ISO8601 */
      date?: string;
    };
    user_updates: {
      data?: {
        /** @description Last updated Anime */
        anime?: ({
          entry?: components['schemas']['anime_meta'];
        } & {
          score?: number | null;
          status?: string;
          episodes_seen?: number | null;
          episodes_total?: number | null;
          /** @description ISO8601 format */
          date?: string;
        })[];
        /** @description Last updated Manga */
        manga?: ({
          entry?: components['schemas']['manga_meta'];
        } & {
          score?: number | null;
          status?: string;
          chapters_read?: number | null;
          chapters_total?: number | null;
          volumes_read?: number | null;
          volumes_total?: number | null;
          /** @description ISO8601 format */
          date?: string;
        })[];
      };
    };
    user_profile: {
      /** @description MyAnimeList ID */
      mal_id?: number | null;
      /** @description MyAnimeList Username */
      username?: string;
      /** @description MyAnimeList URL */
      url?: string;
      images?: components['schemas']['user_images'];
      /** @description Last Online Date ISO8601 */
      last_online?: string | null;
      /** @description User Gender */
      gender?: string | null;
      /** @description Birthday Date ISO8601 */
      birthday?: string | null;
      /** @description Location */
      location?: string | null;
      /** @description Joined Date ISO8601 */
      joined?: string | null;
    };
    /** @description Transform the resource into an array. */
    users_temp: {
      data?: {
        /** @description MyAnimeList ID */
        mal_id?: number;
        /** @description MyAnimeList Username */
        username?: string;
        /** @description MyAnimeList URL */
        url?: string;
        /** @description Images */
        images?: {
          /** @description Available images in JPG */
          jpg?: {
            /** @description Image URL JPG (225x335) */
            image_url?: string;
          };
          /** @description Available images in WEBP */
          webp?: {
            /** @description Image URL WEBP (225x335) */
            image_url?: string;
          };
        };
        /** @description Last Online Date ISO8601 */
        last_online?: string;
        /** @description User Gender */
        gender?: string;
        /** @description Birthday Date ISO8601 */
        birthday?: string;
        /** @description Location */
        location?: string;
        /** @description Joined Date ISO8601 */
        joined?: string;
        /** @description Anime Stats */
        anime_stats?: {
          /**
           * Format: float
           * @description Number of days spent watching Anime
           */
          days_watched?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Anime Watching */
          watching?: number;
          /** @description Anime Completed */
          completed?: number;
          /** @description Anime On-Hold */
          on_hold?: number;
          /** @description Anime Dropped */
          dropped?: number;
          /** @description Anime Planned to Watch */
          plan_to_watch?: number;
          /** @description Total Anime entries on User list */
          total_entries?: number;
          /** @description Anime re-watched */
          rewatched?: number;
          /** @description Number of Anime Episodes Watched */
          episodes_watched?: number;
        };
        /** @description Manga Stats */
        manga_stats?: {
          /**
           * Format: float
           * @description Number of days spent reading Manga
           */
          days_read?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Manga Reading */
          reading?: number;
          /** @description Manga Completed */
          completed?: number;
          /** @description Manga On-Hold */
          on_hold?: number;
          /** @description Manga Dropped */
          dropped?: number;
          /** @description Manga Planned to Read */
          plan_to_read?: number;
          /** @description Total Manga entries on User list */
          total_entries?: number;
          /** @description Manga re-read */
          reread?: number;
          /** @description Number of Manga Chapters Read */
          chapters_read?: number;
          /** @description Number of Manga Volumes Read */
          volumes_read?: number;
        };
        /** @description Favorite entries */
        favorites?: {
          /** @description Favorite Anime */
          anime?: components['schemas']['entry_meta'][];
          /** @description Favorite Manga */
          manga?: components['schemas']['entry_meta'][];
          /** @description Favorite Characters */
          characters?: components['schemas']['entry_meta'][];
          /** @description Favorite People */
          people?: components['schemas']['entry_meta'][];
        };
        /** @description User About. NOTE: About information is customizable by users through BBCode on MyAnimeList. This means users can add multimedia content, different text sizes, etc. Due to this freeform, Jikan returns parsed HTML. Validate on your end! */
        about?: string;
      }[];
    };
    user_statistics: {
      data?: {
        /** @description Anime Statistics */
        anime?: {
          /**
           * Format: float
           * @description Number of days spent watching Anime
           */
          days_watched?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Anime Watching */
          watching?: number;
          /** @description Anime Completed */
          completed?: number;
          /** @description Anime On-Hold */
          on_hold?: number;
          /** @description Anime Dropped */
          dropped?: number;
          /** @description Anime Planned to Watch */
          plan_to_watch?: number;
          /** @description Total Anime entries on User list */
          total_entries?: number;
          /** @description Anime re-watched */
          rewatched?: number;
          /** @description Number of Anime Episodes Watched */
          episodes_watched?: number;
        };
        /** @description Manga Statistics */
        manga?: {
          /**
           * Format: float
           * @description Number of days spent reading Manga
           */
          days_read?: number;
          /**
           * Format: float
           * @description Mean Score
           */
          mean_score?: number;
          /** @description Manga Reading */
          reading?: number;
          /** @description Manga Completed */
          completed?: number;
          /** @description Manga On-Hold */
          on_hold?: number;
          /** @description Manga Dropped */
          dropped?: number;
          /** @description Manga Planned to Read */
          plan_to_read?: number;
          /** @description Total Manga entries on User list */
          total_entries?: number;
          /** @description Manga re-read */
          reread?: number;
          /** @description Number of Manga Chapters Read */
          chapters_read?: number;
          /** @description Number of Manga Volumes Read */
          volumes_read?: number;
        };
      };
    };
    /** @description Recommendations */
    recommendations: {
      data?: {
        /** @description MAL IDs of recommendations is both of the MAL ID's with a `-` delimiter */
        mal_id?: string;
        /** @description Array of 2 entries that are being recommended to each other */
        entry?: (
          | components['schemas']['anime_meta']
          | components['schemas']['manga_meta']
        )[];
        /** @description Recommendation context provided by the user */
        content?: string;
        user?: components['schemas']['user_by_id'];
      }[];
    } & components['schemas']['pagination'];
    /** @description Entry Recommendations Resource */
    entry_recommendations: {
      data?: {
        entry?:
          | components['schemas']['anime_meta']
          | components['schemas']['manga_meta'];
      }[];
    };
    manga_review: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList review URL */
      url?: string;
      /** @description Entry type */
      type?: string;
      /** @description User reaction count on the review */
      reactions?: {
        /** @description Overall reaction count */
        overall?: number;
        /** @description Nice reaction count */
        nice?: number;
        /** @description Love it reaction count */
        love_it?: number;
        /** @description Funny reaction count */
        funny?: number;
        /** @description Confusing reaction count */
        confusing?: number;
        /** @description Informative reaction count */
        informative?: number;
        /** @description Well written reaction count */
        well_written?: number;
        /** @description Creative reaction count */
        creative?: number;
      };
      /** @description Review created date ISO8601 */
      date?: string;
      /** @description Review content */
      review?: string;
      /** @description Number of user votes on the Review */
      score?: number;
      /** @description Review tags */
      tags?: string[];
      /** @description The review contains spoiler */
      is_spoiler?: boolean;
      /** @description The review was made before the entry was completed */
      is_preliminary?: boolean;
    };
    anime_review: {
      /** @description MyAnimeList ID */
      mal_id?: number;
      /** @description MyAnimeList review URL */
      url?: string;
      /** @description Entry type */
      type?: string;
      /** @description User reaction count on the review */
      reactions?: {
        /** @description Overall reaction count */
        overall?: number;
        /** @description Nice reaction count */
        nice?: number;
        /** @description Love it reaction count */
        love_it?: number;
        /** @description Funny reaction count */
        funny?: number;
        /** @description Confusing reaction count */
        confusing?: number;
        /** @description Informative reaction count */
        informative?: number;
        /** @description Well written reaction count */
        well_written?: number;
        /** @description Creative reaction count */
        creative?: number;
      };
      /** @description Review created date ISO8601 */
      date?: string;
      /** @description Review content */
      review?: string;
      /** @description Number of user votes on the Review */
      score?: number;
      /** @description Review tags */
      tags?: string[];
      /** @description The review contains spoiler */
      is_spoiler?: boolean;
      /** @description The review was made before the entry was completed */
      is_preliminary?: boolean;
      /** @description Number of episodes watched */
      episodes_watched?: number;
    };
    /** @description Anime Reviews Resource */
    anime_reviews: {
      data?: ({
        user?: components['schemas']['user_meta'];
      } & components['schemas']['anime_review'])[];
    } & components['schemas']['pagination'];
    /** @description Manga Reviews Resource */
    manga_reviews: {
      data?: ({
        user?: components['schemas']['user_meta'];
      } & components['schemas']['manga_review'])[];
    } & components['schemas']['pagination'];
    /** @description Streaming links */
    streaming_links: {
      data?: {
        name?: string;
        url?: string;
      }[];
    };
    /** @description Anime User Updates Resource */
    anime_userupdates: {
      data?: {
        user?: components['schemas']['user_meta'];
        /** @description User Score */
        score?: number | null;
        /** @description User list status */
        status?: string;
        /** @description Number of episodes seen */
        episodes_seen?: number | null;
        /** @description Total number of episodes */
        episodes_total?: number | null;
        /** @description Last updated date ISO8601 */
        date?: string;
      }[];
    } & components['schemas']['pagination'];
    /** @description Manga User Updates Resource */
    manga_userupdates: {
      data?: {
        user?: components['schemas']['user_meta'];
        /** @description User Score */
        score?: number | null;
        /** @description User list status */
        status?: string;
        /** @description Number of volumes read */
        volumes_read?: number;
        /** @description Total number of volumes */
        volumes_total?: number;
        /** @description Number of chapters read */
        chapters_read?: number;
        /** @description Total number of chapters */
        chapters_total?: number;
        /** @description Last updated date ISO8601 */
        date?: string;
      }[];
    } & components['schemas']['pagination'];
  };
  responses: {
    /** @description Error: Bad request. When required parameters were not supplied. */
    400: {
      content: never;
    };
  };
  parameters: {
    /** @description This is a flag. When supplied it will include entries with the Kids genres in specific endpoints that filter them out by default. You do not need to pass a value to it. e.g usage: `?kids` */
    kids?: boolean;
    limit?: number;
    page?: number;
    /** @description Any reviews left during an ongoing anime/manga, those reviews are tagged as preliminary. NOTE: Preliminary reviews are not returned by default so if the entry is airing/publishing you need to add this otherwise you will get an empty list. e.g usage: `?preliminary=true` */
    preliminary?: boolean;
    /** @description 'Safe For Work'. This is a flag. When supplied it will filter out entries according to the SFW Policy. You do not need to pass a value to it. e.g usage: `?sfw` */
    sfw?: boolean;
    /** @description Any reviews that are tagged as a spoiler. Spoiler reviews are not returned by default. e.g usage: `?spoiler=true` */
    spoiler?: boolean;
    /** @description This is a flag. When supplied it will include entries which are unapproved. Unapproved entries on MyAnimeList are those that are user submitted and have not yet been approved by MAL to show up on other pages. They will have their own specifc pages and are often removed resulting in a 404 error. You do not need to pass a value to it. e.g usage: `?unapproved` */
    unapproved?: boolean;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  getAnimeFullById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns complete anime resource data */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['anime_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['anime'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeCharacters: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime characters resource */
      200: {
        content: {
          'application/json': components['schemas']['anime_characters'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeStaff: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime staff resource */
      200: {
        content: {
          'application/json': components['schemas']['anime_staff'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeEpisodes: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of anime episodes */
      200: {
        content: {
          'application/json': components['schemas']['anime_episodes'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeEpisodeById: {
    parameters: {
      path: {
        id: number;
        episode: number;
      };
    };
    responses: {
      /** @description Returns a single anime episode resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['anime_episode'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeNews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of news articles related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['anime_news'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeForum: {
    parameters: {
      query?: {
        /** @description Filter topics */
        filter?: 'all' | 'episode' | 'other';
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of forum topics related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['forum'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeVideos: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns videos related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['anime_videos'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeVideosEpisodes: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns episode videos related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['anime_videos_episodes'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimePictures: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns pictures related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['pictures_variants'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeStatistics: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime statistics */
      200: {
        content: {
          'application/json': components['schemas']['anime_statistics'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeMoreInfo: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime statistics */
      200: {
        content: {
          'application/json': components['schemas']['moreinfo'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeRecommendations: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime recommendations */
      200: {
        content: {
          'application/json': components['schemas']['entry_recommendations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeUserUpdates: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of users who have added/updated/removed the entry on their list */
      200: {
        content: {
          'application/json': components['schemas']['anime_userupdates'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        preliminary?: components['parameters']['preliminary'];
        spoiler?: components['parameters']['spoiler'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime reviews */
      200: {
        content: {
          'application/json': components['schemas']['anime_reviews'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeRelations: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime relations */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['relation'][];
          };
        };
      };
    };
  };
  getAnimeThemes: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime themes */
      200: {
        content: {
          'application/json': components['schemas']['anime_themes'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeExternal: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime external links */
      200: {
        content: {
          'application/json': components['schemas']['external_links'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeStreaming: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime streaming links */
      200: {
        content: {
          'application/json': components['schemas']['external_links'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterFullById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns complete character resource data */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['character_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns character resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['character'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterAnime: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime that character is in */
      200: {
        content: {
          'application/json': components['schemas']['character_anime'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterManga: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga that character is in */
      200: {
        content: {
          'application/json': components['schemas']['character_manga'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterVoiceActors: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns the character's voice actors */
      200: {
        content: {
          'application/json': components['schemas']['character_voice_actors'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharacterPictures: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns pictures related to the entry */
      200: {
        content: {
          'application/json': components['schemas']['character_pictures'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getClubsById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns Club Resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['club'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getClubMembers: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns Club Members Resource */
      200: {
        content: {
          'application/json': components['schemas']['pagination'] &
            components['schemas']['club_member'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getClubStaff: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns Club Staff */
      200: {
        content: {
          'application/json': components['schemas']['club_staff'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getClubRelations: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns Club Relations */
      200: {
        content: {
          'application/json': components['schemas']['club_relations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeGenres: {
    parameters: {
      query?: {
        filter?: components['schemas']['genre_query_filter'];
      };
    };
    responses: {
      /** @description Returns entry genres, explicit_genres, themes and demographics */
      200: {
        content: {
          'application/json': components['schemas']['genres'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaGenres: {
    parameters: {
      query?: {
        filter?: components['schemas']['genre_query_filter'];
      };
    };
    responses: {
      /** @description Returns entry genres, explicit_genres, themes and demographics */
      200: {
        content: {
          'application/json': components['schemas']['genres'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMagazines: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        order_by?: components['schemas']['magazines_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
      };
    };
    responses: {
      /** @description Returns magazines collection */
      200: {
        content: {
          'application/json': components['schemas']['magazines'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaFullById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns complete manga resource data */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['manga_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns pictures related to the entry */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['manga'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaCharacters: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga characters resource */
      200: {
        content: {
          'application/json': components['schemas']['manga_characters'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaNews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of manga news topics */
      200: {
        content: {
          'application/json': components['schemas']['manga_news'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaTopics: {
    parameters: {
      query?: {
        /** @description Filter topics */
        filter?: 'all' | 'episode' | 'other';
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of manga forum topics */
      200: {
        content: {
          'application/json': components['schemas']['forum'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaPictures: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of manga pictures */
      200: {
        content: {
          'application/json': components['schemas']['manga_pictures'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaStatistics: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns anime statistics */
      200: {
        content: {
          'application/json': components['schemas']['manga_statistics'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaMoreInfo: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga moreinfo */
      200: {
        content: {
          'application/json': components['schemas']['moreinfo'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaRecommendations: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga recommendations */
      200: {
        content: {
          'application/json': components['schemas']['entry_recommendations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaUserUpdates: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga user updates */
      200: {
        content: {
          'application/json': components['schemas']['manga_userupdates'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        preliminary?: components['parameters']['preliminary'];
        spoiler?: components['parameters']['spoiler'];
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga reviews */
      200: {
        content: {
          'application/json': components['schemas']['manga_reviews'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaRelations: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga relations */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['relation'][];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaExternal: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns manga external links */
      200: {
        content: {
          'application/json': components['schemas']['external_links'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonFullById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns complete character resource data */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['person_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns pictures related to the entry */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['person'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonAnime: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns person's anime staff positions */
      200: {
        content: {
          'application/json': components['schemas']['person_anime'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonVoices: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns person's voice acting roles */
      200: {
        content: {
          'application/json': components['schemas']['person_voice_acting_roles'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonManga: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns person's published manga works */
      200: {
        content: {
          'application/json': components['schemas']['person_manga'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPersonPictures: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns a list of pictures of the person */
      200: {
        content: {
          'application/json': components['schemas']['person_pictures'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getProducerById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns producer resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['producer'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getProducerFullById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns producer resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['producer_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getProducerExternal: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns producer's external links */
      200: {
        content: {
          'application/json': components['schemas']['external_links'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRandomAnime: {
    responses: {
      /** @description Returns a random anime resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['anime'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRandomManga: {
    responses: {
      /** @description Returns a random manga resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['manga'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRandomCharacters: {
    responses: {
      /** @description Returns a random character resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['character'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRandomPeople: {
    responses: {
      /** @description Returns a random person resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['person'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRandomUsers: {
    responses: {
      /** @description Returns a random user profile resource */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['user_profile'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRecentAnimeRecommendations: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
    };
    responses: {
      /** @description Returns recent anime recommendations */
      200: {
        content: {
          'application/json': components['schemas']['recommendations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRecentMangaRecommendations: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
    };
    responses: {
      /** @description Returns recent manga recommendations */
      200: {
        content: {
          'application/json': components['schemas']['recommendations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRecentAnimeReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        preliminary?: components['parameters']['preliminary'];
        spoiler?: components['parameters']['spoiler'];
      };
    };
    responses: {
      /** @description Returns recent anime reviews */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getRecentMangaReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        preliminary?: components['parameters']['preliminary'];
        spoiler?: components['parameters']['spoiler'];
      };
    };
    responses: {
      /** @description Returns recent manga reviews */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getSchedules: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        /** @description Filter by day */
        filter?:
          | 'monday'
          | 'tuesday'
          | 'wednesday'
          | 'thursday'
          | 'friday'
          | 'unknown'
          | 'other';
        /** @description When supplied, it will filter entries with the `Kids` Genre Demographic. When supplied as `kids=true`, it will return only Kid entries and when supplied as `kids=false`, it will filter out any Kid entries. Defaults to `false`. */
        kids?: 'true' | 'false';
        /** @description 'Safe For Work'. When supplied, it will filter entries with the `Hentai` Genre. When supplied as `sfw=true`, it will return only SFW entries and when supplied as `sfw=false`, it will filter out any Hentai entries. Defaults to `false`. */
        sfw?: 'true' | 'false';
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns weekly schedule */
      200: {
        content: {
          'application/json': components['schemas']['schedules'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getAnimeSearch: {
    parameters: {
      query?: {
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        type?: components['schemas']['anime_search_query_type'];
        score?: number;
        /** @description Set a minimum score for results. */
        min_score?: number;
        /** @description Set a maximum score for results */
        max_score?: number;
        status?: components['schemas']['anime_search_query_status'];
        rating?: components['schemas']['anime_search_query_rating'];
        /** @description Filter out Adult entries */
        sfw?: boolean;
        /** @description Filter by genre(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        genres?: string;
        /** @description Exclude genre(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        genres_exclude?: string;
        order_by?: components['schemas']['anime_search_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
        /** @description Filter by producer(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        producers?: string;
        /** @description Filter by starting date. Format: YYYY-MM-DD. e.g `2022`, `2005-05`, `2005-01-01` */
        start_date?: string;
        /** @description Filter by ending date. Format: YYYY-MM-DD. e.g `2022`, `2005-05`, `2005-01-01` */
        end_date?: string;
      };
    };
    responses: {
      /** @description Returns search results for anime */
      200: {
        content: {
          'application/json': components['schemas']['anime_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getMangaSearch: {
    parameters: {
      query?: {
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        type?: components['schemas']['manga_search_query_type'];
        score?: number;
        /** @description Set a minimum score for results. */
        min_score?: number;
        /** @description Set a maximum score for results */
        max_score?: number;
        status?: components['schemas']['manga_search_query_status'];
        /** @description Filter out Adult entries */
        sfw?: boolean;
        /** @description Filter by genre(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        genres?: string;
        /** @description Exclude genre(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        genres_exclude?: string;
        order_by?: components['schemas']['manga_search_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
        /** @description Filter by magazine(s) IDs. Can pass multiple with a comma as a delimiter. e.g 1,2,3 */
        magazines?: string;
        /** @description Filter by starting date. Format: YYYY-MM-DD. e.g `2022`, `2005-05`, `2005-01-01` */
        start_date?: string;
        /** @description Filter by ending date. Format: YYYY-MM-DD. e.g `2022`, `2005-05`, `2005-01-01` */
        end_date?: string;
      };
    };
    responses: {
      /** @description Returns search results for manga */
      200: {
        content: {
          'application/json': components['schemas']['manga_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getPeopleSearch: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        order_by?: components['schemas']['people_search_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
      };
    };
    responses: {
      /** @description Returns search results for people */
      200: {
        content: {
          'application/json': components['schemas']['people_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getCharactersSearch: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        order_by?: components['schemas']['characters_search_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
      };
    };
    responses: {
      /** @description Returns search results for characters */
      200: {
        content: {
          'application/json': components['schemas']['characters_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUsersSearch: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        gender?: components['schemas']['users_search_query_gender'];
        location?: string;
        maxAge?: number;
        minAge?: number;
      };
    };
    responses: {
      /** @description Returns search results for users */
      200: {
        content: {
          'application/json': components['schemas']['users_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Returns username by ID search */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['user_by_id'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getClubsSearch: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        type?: components['schemas']['club_search_query_type'];
        category?: components['schemas']['club_search_query_category'];
        order_by?: components['schemas']['club_search_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
      };
    };
    responses: {
      /** @description Returns search results for clubs */
      200: {
        content: {
          'application/json': components['schemas']['clubs_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getProducers: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
        q?: string;
        order_by?: components['schemas']['producers_query_orderby'];
        sort?: components['schemas']['search_query_sort'];
        /** @description Return entries starting with the given letter */
        letter?: string;
      };
    };
    responses: {
      /** @description Returns producers collection */
      200: {
        content: {
          'application/json': components['schemas']['producers'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getSeasonNow: {
    parameters: {
      query?: {
        /** @description Entry types */
        filter?: 'tv' | 'movie' | 'ova' | 'special' | 'ona' | 'music';
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns current seasonal anime */
      200: {
        content: {
          'application/json': components['schemas']['anime_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getSeason: {
    parameters: {
      query?: {
        /** @description Entry types */
        filter?: 'tv' | 'movie' | 'ova' | 'special' | 'ona' | 'music';
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
      path: {
        year: number;
        season: string;
      };
    };
    responses: {
      /** @description Returns seasonal anime */
      200: {
        content: {
          'application/json': components['schemas']['anime_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getSeasonsList: {
    responses: {
      /** @description Returns available list of seasons */
      200: {
        content: {
          'application/json': components['schemas']['seasons'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getSeasonUpcoming: {
    parameters: {
      query?: {
        /** @description Entry types */
        filter?: 'tv' | 'movie' | 'ova' | 'special' | 'ona' | 'music';
        sfw?: components['parameters']['sfw'];
        unapproved?: components['parameters']['unapproved'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns upcoming season's anime */
      200: {
        content: {
          'application/json': components['schemas']['anime_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getTopAnime: {
    parameters: {
      query?: {
        type?: components['schemas']['anime_search_query_type'];
        filter?: components['schemas']['top_anime_filter'];
        rating?: components['schemas']['anime_search_query_rating'];
        /** @description Filter out Adult entries */
        sfw?: boolean;
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns top anime */
      200: {
        content: {
          'application/json': components['schemas']['anime_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getTopManga: {
    parameters: {
      query?: {
        type?: components['schemas']['manga_search_query_type'];
        filter?: components['schemas']['top_manga_filter'];
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns top manga */
      200: {
        content: {
          'application/json': components['schemas']['manga_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getTopPeople: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns top people */
      200: {
        content: {
          'application/json': components['schemas']['people_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getTopCharacters: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        limit?: components['parameters']['limit'];
      };
    };
    responses: {
      /** @description Returns top characters */
      200: {
        content: {
          'application/json': components['schemas']['characters_search'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getTopReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
        type?: components['schemas']['top_reviews_type_enum'];
        /** @description Whether the results include preliminary reviews or not. Defaults to true. */
        preliminary?: boolean;
        /** @description Whether the results include reviews with spoilers or not. Defaults to true. */
        spoilers?: boolean;
      };
    };
    responses: {
      /** @description Returns top reviews */
      200: {
        content: {
          'application/json': {
            data?: {
              data?: (
                | ({
                    user?: components['schemas']['user_meta'];
                  } & {
                    anime?: components['schemas']['anime_meta'];
                  } & components['schemas']['anime_review'])
                | ({
                    user?: components['schemas']['user_meta'];
                  } & {
                    manga?: components['schemas']['manga_meta'];
                  } & components['schemas']['manga_review'])
              )[];
            } & components['schemas']['pagination'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserFullProfile: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns complete user resource data */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['user_profile_full'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserProfile: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user profile */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['user_profile'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserStatistics: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user statistics */
      200: {
        content: {
          'application/json': components['schemas']['user_statistics'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserFavorites: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user favorites */
      200: {
        content: {
          'application/json': {
            data?: components['schemas']['user_favorites'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserUpdates: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user updates */
      200: {
        content: {
          'application/json': components['schemas']['user_updates'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserAbout: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user about in raw HTML */
      200: {
        content: {
          'application/json': components['schemas']['user_about'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserHistory: {
    parameters: {
      query?: {
        type?: 'anime' | 'manga';
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user history (past 30 days) */
      200: {
        content: {
          'application/json': components['schemas']['user_history'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserFriends: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user friends */
      200: {
        content: {
          'application/json': components['schemas']['user_friends'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  /**
   * @deprecated
   * @description User Anime lists have been discontinued since May 1st, 2022. <a href='https://docs.google.com/document/d/1-6H-agSnqa8Mfmw802UYfGQrceIEnAaEh4uCXAPiX5A'>Read more</a>
   */
  getUserAnimelist: {
    parameters: {
      query?: {
        status?: components['schemas']['user_anime_list_status_filter'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user anime list */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  /**
   * @deprecated
   * @description User Manga lists have been discontinued since May 1st, 2022. <a href='https://docs.google.com/document/d/1-6H-agSnqa8Mfmw802UYfGQrceIEnAaEh4uCXAPiX5A'>Read more</a>
   */
  getUserMangaList: {
    parameters: {
      query?: {
        status?: components['schemas']['user_manga_list_status_filter'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user manga list */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserReviews: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user reviews */
      200: {
        content: {
          'application/json': {
            data?: {
              data?: (
                | ({
                    user?: components['schemas']['user_meta'];
                  } & {
                    anime?: components['schemas']['anime_meta'];
                  } & components['schemas']['anime_review'])
                | ({
                    user?: components['schemas']['user_meta'];
                  } & {
                    manga?: components['schemas']['manga_meta'];
                  } & components['schemas']['manga_review'])
              )[];
            } & components['schemas']['pagination'];
          };
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserRecommendations: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns Recent Anime Recommendations */
      200: {
        content: {
          'application/json': components['schemas']['recommendations'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserClubs: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user clubs */
      200: {
        content: {
          'application/json': components['schemas']['user_clubs'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getUserExternal: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Returns user's external links */
      200: {
        content: {
          'application/json': components['schemas']['external_links'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getWatchRecentEpisodes: {
    responses: {
      /** @description Returns Recently Added Episodes */
      200: {
        content: {
          'application/json': components['schemas']['watch_episodes'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getWatchPopularEpisodes: {
    responses: {
      /** @description Returns Popular Episodes */
      200: {
        content: {
          'application/json': components['schemas']['watch_episodes'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getWatchRecentPromos: {
    parameters: {
      query?: {
        page?: components['parameters']['page'];
      };
    };
    responses: {
      /** @description Returns Recently Added Promotional Videos */
      200: {
        content: {
          'application/json': components['schemas']['watch_promos'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
  getWatchPopularPromos: {
    responses: {
      /** @description Returns Popular Promotional Videos */
      200: {
        content: {
          'application/json': components['schemas']['watch_promos'];
        };
      };
      /** @description Error: Bad request. When required parameters were not supplied. */
      400: {
        content: never;
      };
    };
  };
}
